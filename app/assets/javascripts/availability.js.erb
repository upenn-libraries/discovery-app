var globaldata = {};
var renderdata = {};
var validRequestTypes = ["CentralCAT","MAINT-EC","CHI CAT","CatMet","HEB CAT",
                         "Jap-KorCAT","MUSIC CAT","MidEastCat","SASIA CAT",
                         "SCPC CAT","SLAV CAT","BindRepair","MAINT-enh",
                         "MAINT-otf","MAINT-tr"];
$.fn.dataTable.ext.errMode = 'none';

// Hackily parses relevant context out of the DOM for the specified mmsid
function get_request_context(mmsid) {
  var d = document.getElementById('items_nocirc-'+mmsid);
  var items_nocirc = (d === null) ? '' : d.getAttribute('val');
  return {
    pickupable: null,
    items_nocirc: items_nocirc
  };
}

$(document).ready(function() {

    // subclass BlacklightAlma
    function Franklin() {
        BlacklightAlma.call(this);
    }

    function constructAeonLink(mmsid, holding) {
        if (holding['location_code'] == 'vanpNocirc') {
          return null;
        }

        if(holding['link_to_aeon']) {
          return '<a href="/redir/aeon?bibid=' + mmsid + '&hldid=' + holding['holding_id'] + '" target="_blank">Request to view</a>';
        }

        return null;
    }

    Franklin.prototype = Object.create(BlacklightAlma.prototype);

    Franklin.prototype.formatHolding = function (mms_id, holding) {
        if (holding['inventory_type'] === 'physical') {
            var availability = "Unknown";
            if (holding['availability'] === 'check_holdings') {
                availability = "<span class='label label-availability label-warning'>See options</span>";
            } else if (holding['availability'] === 'unavailable') {
                // pre-COVID-19 always mapped to "See request options";
                if (holding['link_to_aeon']) {
                    // Aeon materials show as "unavailable", but not in the sense of being unviewable.
                    availability = holding['location_code'] === 'vanpNocirc' ? "<span class='label label-availability label-info'>Use online access — print restricted</span>" : "<span class='label label-availability label-warning'>See request options</span>";
                } else {
                    availability = "<span class='label label-availability label-danger'>Unavailable</span>";
                }
            } else if (holding['availability'] === 'available') {
                availability = holding['location_code'] === 'vanpNocirc' ? "<span class='label label-availability label-info'>Use online access — print restricted</span>" : "<span class='label label-availability label-success'>Available</span>";
            }
            // TODO: pass in format to shelfLocatorLink() somehow
            return [availability, holding['location'], holding['call_number'], $.shelfLocatorLink(mms_id, holding, "TODO"), constructAeonLink(mms_id, holding)]
                .filter(function (item) {
                    return item != null && item.length > 0;
                }).join(' ');
        } else if(holding['inventory_type'] === 'electronic') {

            if (holding['activation_status'] === 'Available') {
                var url = null;
                if (holding['portfolio_pid']) {
                    url = "https://<%= ENV['ALMA_DELIVERY_DOMAIN'] %>/view/uresolver/<%= ENV['ALMA_INSTITUTION_CODE'] %>/openurl?Force_direct=true&test_access=true&&portfolio_pid=" +
                        holding['portfolio_pid'] + "&rfr_id=info%3Asid%2Fprimo.exlibrisgroup.com&u.ignore_date_coverage=true"
                }

                if (url !== null) {
                    var text = holding['collection'] || "Electronic resource";
                    url = '<a href="' + url + '">' + text + '</a>';
                } else {
                    url = "Electronic Resource (no URL available)";
                }

                return [url, holding['coverage_statement'], holding['public_note']]
                    .filter(function (item) {
                        return item != null && item.length > 0;
                    }).join(" - ");
            }

        } else {
            return BlacklightAlma.prototype.formatHolding.call(this, mms_id, holding);
        }
    };

    Franklin.prototype.renderAvailability = function (element, html) {
      // if there's no availability text at all, then hide the field label altogether
      if(html && html.length > 0) {
          BlacklightAlma.prototype.renderAvailability.call(this, element, html);
      } else {
          $(element).closest(".document").find(".blacklight-availability").hide();
      }
    };

    Franklin.prototype.loadRequestOptionsAjax = function(mmsid) {
        var url = "/alma/single_availability.json?mms_id=" + encodeURIComponent(mmsid);

        $('#requestOptions-' + mmsid).on('error.dt', function(e, settings, techNote, message) {
            $(this).dataTable().fnSettings().oLanguage.sEmptyTable = 'An error has occurred.';
            $(this).DataTable().draw();
        })
        .DataTable({
            "ajax": function(data, callback, settings) {
                $.get(url, function(data) {
                    globaldata = $.extend({}, globaldata, data["metadata"]);
                    callback({"data": data["data"]});
                    Franklin.prototype.loadRequestOptionListAjax(mmsid);
                });
            },
            "processing": true,
            "columnDefs": [
                { "visible": false, "targets": [0,6,7] },
                { "orderable": false, "targets": 5 }
            ],
            "order": [],
            "language": {
              "search": "Filter records:",
              "loadingRecords": "&nbsp;",
              "processing": "Please wait - loading...",
              "emptyTable": "No item data available"
            },
            "drawCallback": function(settings) {
                var table = $('#requestOptions-' + mmsid).DataTable();
                var pageSize = table.settings()[0]['_iDisplayLength'];
                var tableLen = table.data().length;

                if(tableLen > 0 && globaldata != null) {
                    data = table.data();
                    for(var i = 0; i < tableLen; i++) {
                        if(data[i][7] in globaldata && renderdata[mmsid].indexOf(data[i][7]) === -1) {
                            var requests = globaldata[data[i][7]];
                            if(validRequestTypes.indexOf(requests[0]) !== -1) {
                                renderdata[mmsid].push(data[i][7]);
                                // TODO: when libraries reopen: remove conditional, Pickup@Penn=>Request
                                data[i][5][0] = "<a target='_blank' href='/alma/request?mms_id=" + mmsid + "&holding_id=" + data[i][6] + "&item_pid=" + data[i][7] + "'>PickUp@Penn</a>";
                                table.row(i).invalidate().draw();
                            }
                        }
                    }
                }

                if(tableLen <= 10) {
                  $('#requestOptions-' + mmsid + '_length').hide();
                }
                else {
                  $('#requestOptions-' + mmsid + '_length').show()
                }

                if(tableLen > pageSize) {
                  $('#requestOptions-' + mmsid + '_paginate').show()
                }
                else {
                  $('#requestOptions-' + mmsid + '_paginate').hide();
                }
            },
            "initComplete": function(settings, json) {
                var table = $('#requestOptions-' + mmsid).DataTable();

                if(globaldata[mmsid]['inventory_type'] === 'electronic') {
                    table.column(4).visible(false);
                    $(table.column(2).header()).text("");
                }

                // Reference: https://stackoverflow.com/a/15458987
                // Check if the location of the first holding is an HTML element,
                // indicating this is for a serial
                else if(/<[a-z][\s\S]*>/i.test(json.data[0][2])) {
                    $('#requestOptionsAvailability-' + mmsid).text('Holdings');
                }
                else {
                    $('#requestOptionsAvailability-' + mmsid).text('Availability');
                }

                $('.load-holding-details').each(function(idx, element) {
                    var mmsid = $(element).data("mmsid");
                    var holdingid = $(element).data("holdingid");
                    var url = "/alma/holding_details?mms_id="+mmsid+"&holding_id="+holdingid
                    $.ajax({
                        url: url,
                        success: function(data, textStatus, jqXHR) {
                            var holdingdetails = data['holding_details'];
                            var notes = data['notes'];

                            $(element).removeClass('load-holding-details');
                            $(element).html('');
                            $(element).append(holdingdetails);
                            $('#notes-' + holdingid).append(notes);
                        }
                    });
                });

                $('.load-portfolio-details').each(function(idx, element) {
                    var mmsid = $(element).data("mmsid");
                    var portfoliopid = $(element).data("portfoliopid");
                    var collectionid = $(element).data("collectionid");
                    var coverage = $(element).data("coverage");
                    var publicnote = $(element).data("publicnote");

                    // "standalone" portfolios have no collection_id, and so we should skip this lookup
                    if(!collectionid) {
                        $(element).removeClass('load-portfolio-details').html('');
                        return;
                    }

                    var url = "/alma/portfolio_details?mms_id="+mmsid+"&portfolio_pid="+portfoliopid+"&collection_id="+collectionid+"&coverage="+coverage+"&public_note="+publicnote
                    $.ajax({
                        url: url,
                        success: function(data, textStatus, jqXHR) {
                            $(element).removeClass('load-portfolio-details');
                            $(element).html('');
                            $(element).append(coverage);
                            var notes = [data['public_note'], data['authentication_note']]
                                .filter(function(obj) { return obj }) // compact
                                .join('<br>')
                            $('#notes-' + portfoliopid).append(notes)
                        }
                    });
                });
            }
        });
    };

    Franklin.prototype.loadRequestOptionListAjax = function(mmsid) {
        $.ajax({
            url: "/alma/request_options.json?mms_id="+mmsid,
            success: function(data, textStatus, jqXHR) {
                var optionList = $('#requestOptionList-' + mmsid);
                var optionCodesForToolPanel = ['ARES', 'ENHANCED']
                // draw request buttons
                data.forEach(function(element) {
                    var $showTools = $('.show-tools .panel-body ul.nav');
                    if($showTools.length > 0 && optionCodesForToolPanel.includes(element['option_code'])) {
                        // append non-requesty options to tools panel
                        $showTools.append($('<li><a target="_blank" href="'+ element['option_url'] +'">' + element['option_name'] + '</a></li>'));
                    } else if(!optionCodesForToolPanel.includes(element['option_code'])) {
                        var containingdiv = $('<div class="request-option-wrapper"></div>');
                        var highlightable = element['highlightable'] ? ' highlightable' : ''
                        var link = $('<a>').attr({
                            class: 'btn btn-default btn-request-option' + highlightable,
                            href: element["option_url"],
                            target: '_blank'
                        }).text(element['option_name']);
                        link.appendTo(containingdiv);
                        containingdiv.appendTo(optionList);
                    }
                });
                $('#request-options-spinner-' + mmsid).remove();
            }
        });
    };

    Franklin.prototype.loadRequestOptions = function() {
        $(".request-options-load").each(function(index, element) {
            var mmsid = $(element).data("mmsid");
            if($(element).is(":visible")) {
                Franklin.prototype.loadRequestOptionsAjax(mmsid);
                Franklin.prototype.initializeItemsDataTable(mmsid);
            }
            else {
                $('.toggle[data-mmsid=' + mmsid + ']').each(function() {
                    var $this = $(this);
                    $this.one("click", function(e) {
                        e.preventDefault();
                        $this.closest('.panel').find('.panel-body').slideDown(200);
                        Franklin.prototype.initializeItemsDataTable(mmsid);
                        Franklin.prototype.loadRequestOptionsAjax(mmsid);
                        $(this).click(function() {
                            $('#table-wrapper-' + mmsid).closest('.panel-body').slideToggle(200);
                        });
                    });
                });
            }
        });
    };

    Franklin.prototype.initializeItemsDataTable = function(mmsid) {
        $('#holdingItems-' + mmsid).on('error.dt', function(e, settings, techNote, message) {
            $(this).dataTable().fnSettings().oLanguage.sEmptyTable = 'An error has occurred.';
            $(this).DataTable().draw();
        })
        .DataTable({
            "dom": '<"backbutton-top-'+ mmsid +'">lftipr<"backbutton-' + mmsid + '">',
            "processing": true,
            "columnDefs": [
                { "visible": false, "targets": [0,6,7] },
                { "orderable": false, "targets": 5 }
            ],
            "order": [],
            "language": {
                "search": "Filter records:",
                "loadingRecords": "&nbsp;",
                "processing": "Please wait - loading...",
                "emptyTable": "No item data available"
            },
            "drawCallback": function(settings) {
                var table = $('#holdingItems-' + mmsid).DataTable();
                var pageSize = table.settings()[0]['_iDisplayLength'];
                var tableLen = table.data().length;

                if(tableLen > 0) {
                    data = table.data();
                    for(var i = 0; i < tableLen; i++) {
                        if(data[i][0] in globaldata && renderdata[mmsid].indexOf(data[i][0]) === -1 && data[i][5].length === 0) {
                            var requests = globaldata[data[i][0]];
                            if(validRequestTypes.indexOf(requests[0]) !== -1) {
                                renderdata[mmsid].push(data[i][0]);
                                // TODO: when libraries reopen: remove conditional, Pickup@Penn=>Request
                                data[i][5].push("<a target='_blank' href='/alma/request?mms_id=" + data[i][6] + "&holding_id=" + data[i][7] + "&item_pid=" + data[i][0] + "'>PickUp@Penn</a>");
                                table.row(i).invalidate().draw();
                            }
                        }
                    }
                }

                if(tableLen <= 10) {
                  $('#holdingItems-' + mmsid + '_length').hide();
                }
                else {
                  $('#holdingItems-' + mmsid + '_length').show()
                }

                if(tableLen > pageSize) {
                  $('#holdingItems-' + mmsid + '_paginate').show()
                }
                else {
                  $('#holdingItems-' + mmsid + '_paginate').hide();
                }
            },
            "initComplete": function(settings, json) {
                $('#holdingItems-' + mmsid).show();
                $('#holdingItems-' + mmsid + '_wrapper').hide();
            }
        });

        $('.backbutton-top-' + mmsid).html("<input type='button' value='< Back' onclick='swapDataTables(\"" + mmsid + "\")'></input>");
        $('.backbutton-' + mmsid).html("<br><br><input type='button' value='< Back' onclick='swapDataTables(\"" + mmsid + "\")'></input>");
    };

    Franklin.prototype.checkRequestable = function(mmsid) {
        var url = "/alma/check_requestable?mms_id=" + mmsid;
        $.ajax({
            url: url,
            success: function(data, textStatus, jqXHR) {
                globaldata = $.extend({}, globaldata, data);
                $('#requestOptions-' + mmsid).DataTable().draw();
            }
        });
    }

    var ba = new Franklin();
    ba.loadAvailability();
    ba.loadRequestOptions();
});

function loadItems(mms_id, holding_id, location_code, pickupable) {
    var request_context = get_request_context(mms_id);
    request_context.pickupable = pickupable;
    renderdata[mms_id] = [];
    var holdingItemsTable = $('#holdingItems-' + mms_id).DataTable();
    holdingItemsTable.clear().draw();
    holdingItemsTable.ajax.url('/alma/holding_items.json?mms_id=' + mms_id + "&holding_id=" + holding_id + "&current_location=" + location_code + "&request_context=" + encodeURIComponent(JSON.stringify(request_context))).load();
    swapDataTables(mms_id);
}

function swapDataTables(mmsid) {
    $('#requestOptions-' + mmsid + '_wrapper').toggle();
    $('#holdingItems-' + mmsid + '_wrapper').toggle();
}
